// 인터넷 주소의 변환
문자열 -> 네트워크 바이트 순서의 정수로 변환

ex inet_addr.c
"1.2.3.4" -> 0x4030201

구조체 멤버에 대입
ex inet_aton.c

// 클라이언트에서의 주소 정보 초기화

// 서버 IP주소의 상수화
INADDR_ANY 상수를 통해 주소 정보 초기화

// TCP/IP 계층
각 계층에 대한 설명

// TCP기반 서버
socket - bind - listen - accept - read/write - close

연결요청 대기상태, 연결요청 대기 큐

서버의 listen()이 호출되어야 클라이언트에서 connect()호출 가능

서버 소켓은 문지기이므로 클아이언트와 데이터 송수신을 위해선
서버의 클라이언트 소켓이 하나 더 필요하다

ex hello_server.c 리뷰

// TCP기반 클아이언트
socket - connect - read/write - close

connect() 호출시 자동으로 소켓에 IP, PORT가 할당되므로 bind()가 필요없다

ex hello_client.c 리뷰

// lterative 서버
여러 클라이언트에 서비스를 제공 가능한 서버
-> 지금 수준으로는 반복문을 통해 한 순간에 한 클라이언트를 처리 가능
-> 후에 프로세스와 스레드 학습시 동시에 둘 이상의 클라이언트와 대화 가능

에코 서버: 클라이언트가 전송하는 문자열을 그대로 클아이언트에 재전송한다.

lterative 형태로 동작하는 에코 서버/클라이언트

ex echo_server.c + ex echo_client.c

// 다른 컴퓨터와 통신
vmnetcfg.exe를 vmware player설치 폴더에 넣은후 세팅
Host port : 19090
type: tcp
virtual machine IP address: 192.168.204.128
virtual machine port: 9090

방화벽/고급설정/인바운드규칙/새규칙/포트/tcp선택, 특정로컬포트:19090설정

서버 컴퓨터
>>> ./eserver 9090

클라이언트 컴퓨터
>>> ./eclient 상대 ipv4주소 19090

클라이언트는 한 번에 하나씩 처리 가능하므로 순차적으로 connect할 것

우분투 : 192.168.204.128
cmd : 210.119.12.93

// 에코 클라이언트의 문제점
ex echo_client2.c
--> 결과는 같다.

// 계산기 서버/클라이언트
ex op_server.c + ex op_client.c

// TCP 내부 동작 원리

// UDP 
TCP에 비해 안전성↓, 속도↑

에코 서버/클라이언트
ex uecho_server.c + ex uecho_client.c

방화벽 및 vmnetcfg에서 UDP포트 19099 및 9099 추가할 것